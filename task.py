import numpy as np
from scipy.linalg import solve, det, eig
from colorama import init, Fore
np.set_printoptions(linewidth=1000)
init()



DECIMAL_PLACES = 10
EPS = 10**-DECIMAL_PLACES

def output_check(method_text, method, matrix, vector):
    answer = np.round(solve(matrix, vector), DECIMAL_PLACES)  
    print(answer)
    color = Fore.GREEN if (answer == method).all() else Fore.RED
    print(color, method_text, method)

def checkSelfVelue(method_text, methodAnsver, matrix):
    w, v = eig(matrix)
    answer = float(np.round(min(w), DECIMAL_PLACES))
    print(answer)
    color = Fore.GREEN if (answer == methodAnsver) else Fore.RED
    print(color, method_text, methodAnsver)

###########################################################################################################################################################

# matrix = np.array([[6.0, -4.5, 6.0], 
#                         [3.0, 2.5, 4.3], 
#                         [-2.0, 3.5, 2.5]])
    
# vector = np.array([19.07,
#                     3.21,
#                     -18.25])

###########################################################################################################################################################

# matrix = ([[1, 2, 1, 4],
#                     [2, 0, 4, 3],
#                     [4, 2, 2, 1],
#                     [-3, 1, 3, 2]])

# vector = ([-13,
#                    -28,
#                    -20,
#                    -6])

###########################################################################################################################################################

# matrix = np.array([[10.0,2, 1,1],
#                    [1,10,2,1],
#                    [1,1,10,1],
#                    [1,1,1,20]])

# vector = np.array([10,
#                    12,
#                    8,
#                    17])

###########################################################################################################################################################

# matrix = np.array([[1, -1],
#                     [2, 1]])

# vector = np.array([7,
#                    -5])

###########################################################################################################################################################

# matrix = ([[0.411, 0.421, -0.333, 0.313, -0.141, -0.381, 0.245],
#                    [0.241, 0.705, 0.139, -0.409, 0.321, 0.0625, 0.101],
#                    [0.123, -0.239, 0.502, 0.901, 0.243, 0.819, 0.321],
#                    [0.413, 0.309, 0.801, 0.865, 0.423, 0.118, 0.183],
#                    [0.241, -0.221, -0.243, 0.134, 1.274, 0.712, 0.423],
#                    [0.281, 0.525, 0.719, 0.118, -0.974, 0.808, 0.923],
#                    [0.246, -0.301, 0.231, 0.813, -0.702, 1.223, 1.105]])

# vector = ([ -0.096,
#                     -1.252,
#                     -1.024,
#                     -1.023,
#                     -1.155,
#                     -1.937,
#                     -1.673])

###########################################################################################################################################################

# matrix = ([[2.2, 4, -3, 1.5, 0.6, 2, 0.7],
# 	            [4, 3.2 ,1.5, -0.7, -0.8, 3, 1],
#                 [-3, 1.5, 1.8, 0.9, 3, 2, 2],
#                 [1.5, -0.7, 0.9, 2.2, 4 , 3, 1],
#                 [0.6, -0.8, 3, 4, 3.2, 0.6, 0.7],
#                 [2, 3, 2, 3, 0.6, 2.2, 4],
#                 [0.7, 1, 2, 1, 0.7, 4, 3.2]])

# vector = ([3.2, 
#                 4.3, 
#                 0.1, 
#                 3.5, 
#                 5.3, 
#                 9.0, 
#                 3.7])


###########################################################################################################################################################

# matrix = np.array([[112.2, 4, -3, 1.5, 0.6, 2, 0.7],
# 	            [4, 113.2 ,1.5, -0.7, -0.8, 3, 1],
#                 [-3, 1.5, 111.8, 0.9, 3, 2, 2],
#                 [1.5, -0.7, 0.9, 112.2, 4 , 3, 1],
#                 [0.6, -0.8, 3, 4, 113.2, 0.6, 0.7],
#                 [2, 3, 2, 3, 0.6, 112.2, 4],
#                 [0.7, 1, 2, 1, 0.7, 4, 113.2]])

# vector = np.array([3.2, 
#                 4.3, 
#                 0.1, 
#                 3.5, 
#                 5.3, 
#                 9.0, 
#                 3.7])


##########################################################################################################################################################
matrix = np.array([[2.2, 1, 0.5, 2],
                   [1, 1.3, 2, 1],
                   [0.5, 2, 0.5, 1.6],
                   [2, 1, 1.6, 2]])

vector = np.array([5, 
                1, 
                8,
                6])


###########################################################################################################################################################
# matrix = np.array([[2, 1],
#                    [1, 2]])

# vector = np.array([4, 
#                 5])


###########################################################################################################################################################